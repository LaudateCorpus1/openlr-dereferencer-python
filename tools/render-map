#!/usr/bin/env python3
"""Tool to render maps in the example format.

Dependency: Geopandas, matplotlib

Usage: tools/render-map [db.sqlite] [--big] [--labels]

--big renders the image in a higher resolution.
--labels inscribes nodes and lines.

The output will be written to 'output.png'."""

import sys
from warnings import warn
from openlr_dereferencer.example_sqlite_map import ExampleMapReader
from shapely.geometry import Point, LineString
import matplotlib.pylab as pylab
import geopandas


def get_graph_lines(reader: ExampleMapReader) -> geopandas.GeoSeries:
    lines = [
        LineString([Point(*point) for point in line.coordinates()])
        for line in reader.get_lines()
    ]
    if not lines:
        warn("THE MAP HAS NO LINES")
    return geopandas.GeoSeries(lines)


def render_map(reader: ExampleMapReader, outfile: str, labels: bool = True):
    gs = get_graph_lines(reader)
    ax = gs.plot()

    if labels:
        # Text labels
        for point in reader.get_nodes():
            ax.text(*point.coordinates, point.node_id, weight="bold")

        for line in reader.get_lines():
            (lon0, lat0) = line.start_node.coordinates
            (lon1, lat1) = line.end_node.coordinates
            lon = (lon0 + lon1) / 2
            lat = (lat0 + lat1) / 2
            ax.text(lon, lat, line.line_id, color="darkred", ma="center")

    fig = ax.get_figure()
    fig.savefig(outfile)


def render_sqlite(db: str, labels: bool = True):
    reader = ExampleMapReader(db)
    render_map(reader, "output.png", labels)


if __name__ == "__main__":
    if "--big" in sys.argv:
        pylab.rcParams["figure.figsize"] = 80, 60
    labels = "--labels" in sys.argv
    if len(sys.argv) > 1 and sys.argv[1][0] != "-":
        render_sqlite(sys.argv[1], labels)
    else:
        render_sqlite("db.sqlite", labels)
